/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bustock;
import bustock.model.Category;
import bustock.model.Account;
import bustock.model.ItemStock;
import bustock.model.ItemLog;
import bustock.model.CategoryLog;
import bustock.manager.StockManager;
import bustock.manager.ReportLogManager;
import bustock.manager.LogManager;
import java.util.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.*;
/**
 *
 * @author bz199
 */
public class MainWindows extends javax.swing.JFrame
{
    private Account Account;
    
    public MainWindows(Account Account) {
        initComponents();
        this.Account = Account;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor. 
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabFrame = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        itemsTable = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        PSCategory = new javax.swing.JComboBox<>();
        PSSearchBy = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        PSName = new javax.swing.JTextField();
        PSButton = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        addProduct = new javax.swing.JButton();
        updateProduct = new javax.swing.JButton();
        deleteItem = new javax.swing.JButton();
        btnClearInput = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        PMsku = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        PMName = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        PMCategory = new javax.swing.JComboBox<>();
        PMPrice = new javax.swing.JFormattedTextField();
        PMQty = new javax.swing.JFormattedTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        CMCategory = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        CMAdd = new javax.swing.JButton();
        updateCategory = new javax.swing.JButton();
        deleteCategory = new javax.swing.JButton();
        CMName = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        productLogTable = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        UIDsku = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        UIDProduct = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        UIDPrice = new javax.swing.JFormattedTextField();
        UIDQty = new javax.swing.JFormattedTextField();
        UIDcategory = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        OIDsku = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        OIDProduct = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        OIDPrice = new javax.swing.JFormattedTextField();
        OIDQty = new javax.swing.JFormattedTextField();
        OIDCategory = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        searchFilter = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        PSButton1 = new javax.swing.JButton();
        btnLogRefresh = new javax.swing.JButton();
        textFilter = new javax.swing.JTextField();
        searchBy = new javax.swing.JComboBox<>();
        selectedFilter = new javax.swing.JComboBox<>();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        categoryLogTable = new javax.swing.JTable();
        clearSearchCategory = new javax.swing.JButton();
        extCategoryLogSearch = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        productReportTable = new javax.swing.JTable();
        jPanel13 = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        IRItotal = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        IRIdelete = new javax.swing.JTextField();
        IRIupdate = new javax.swing.JFormattedTextField();
        IRIadd = new javax.swing.JTextField();
        jPanel20 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        categoryReportTable = new javax.swing.JTable();
        jPanel14 = new javax.swing.JPanel();
        jLabel41 = new javax.swing.JLabel();
        CRItotal = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        CRIdelete = new javax.swing.JTextField();
        CRIupdate = new javax.swing.JFormattedTextField();
        CRIadd = new javax.swing.JTextField();
        REmonth = new javax.swing.JComboBox<>();
        REyear = new javax.swing.JComboBox<>();
        REsearch = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabFrame.setPreferredSize(new java.awt.Dimension(970, 660));
        tabFrame.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabFrameMouseClicked(evt);
            }
        });

        itemsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "No.", "SKU", "Name", "Categoty", "Qty", "Price"
            }

        )    {
            public boolean isCellEditable(int row, int column) {
                //all cells false
                return false;
            }
        });
        itemsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itemsTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(itemsTable);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Product Search"));

        jLabel1.setText("Category : ");

        PSSearchBy.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SKU", "Name", "Category", "Qty", "Price" }));
        PSSearchBy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PSSearchByActionPerformed(evt);
            }
        });

        jLabel2.setText("Search By  :");

        jLabel3.setText("Search  : ");

        PSButton.setText("Search");
        PSButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PSButtonActionPerformed(evt);
            }
        });

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PSCategory, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PSName)
                    .addComponent(PSSearchBy, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(PSButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRefresh, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(PSSearchBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(PSCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(PSButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(PSName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRefresh)))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Products Management\n"));

        addProduct.setText("Add Item");
        addProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProductActionPerformed(evt);
            }
        });

        updateProduct.setText("Update Item");
        updateProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateProductActionPerformed(evt);
            }
        });

        deleteItem.setText("Delete Item");
        deleteItem.setToolTipText("");
        deleteItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteItemActionPerformed(evt);
            }
        });

        btnClearInput.setText("Clear Input");
        btnClearInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearInputActionPerformed(evt);
            }
        });

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Product SKU :");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Category :");

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Price :");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Product Name :");

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Quantity :");

        PMCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));

        PMPrice.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.##"))));

        PMQty.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(PMsku, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(PMName, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(PMCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(PMPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(PMQty, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(addProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteItem, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClearInput, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(PMsku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(PMName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel10)
                    .addComponent(PMCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PMQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(PMPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addProduct)
                    .addComponent(updateProduct)
                    .addComponent(deleteItem)
                    .addComponent(btnClearInput))
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Category Management"));

        jLabel4.setText("Category : ");

        CMCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));
        CMCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CMCategoryActionPerformed(evt);
            }
        });

        jLabel5.setText("Name  :");

        CMAdd.setText("Add Category");
        CMAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CMAddActionPerformed(evt);
            }
        });

        updateCategory.setText("Update Category");
        updateCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateCategoryActionPerformed(evt);
            }
        });

        deleteCategory.setText("Delete Category");
        deleteCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteCategoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(CMAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateCategory))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CMCategory, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CMName))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteCategory)
                .addContainerGap(65, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(CMCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(CMName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CMAdd)
                    .addComponent(updateCategory)
                    .addComponent(deleteCategory))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        tabFrame.addTab("Main", jPanel1);

        productLogTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Log ID", "Date", "SKU", "Name", "Username", "State"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        productLogTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productLogTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(productLogTable);

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Log Detail"));

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Updated Item Detail"));

        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel26.setText("Product SKU :");

        UIDsku.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        UIDsku.setEnabled(false);

        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel27.setText("Category :");

        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel28.setText("Price :");

        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel29.setText("Product Name :");

        UIDProduct.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        UIDProduct.setEnabled(false);

        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel30.setText("Quantity :");

        UIDPrice.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.##"))));
        UIDPrice.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        UIDPrice.setEnabled(false);

        UIDQty.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        UIDQty.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        UIDQty.setEnabled(false);

        UIDcategory.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        UIDcategory.setEnabled(false);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(UIDsku, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(UIDcategory, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(UIDPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(UIDProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(UIDQty, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(UIDsku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(UIDcategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(UIDPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(UIDProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(UIDQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Old Item Detail"));

        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel31.setText("Product SKU :");

        OIDsku.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        OIDsku.setEnabled(false);

        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel32.setText("Category :");

        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel33.setText("Price :");

        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel34.setText("Product Name :");

        OIDProduct.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        OIDProduct.setEnabled(false);

        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel35.setText("Quantity :");

        OIDPrice.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.##"))));
        OIDPrice.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        OIDPrice.setEnabled(false);

        OIDQty.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        OIDQty.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        OIDQty.setEnabled(false);

        OIDCategory.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        OIDCategory.setEnabled(false);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(OIDsku, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(OIDCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(OIDPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(OIDProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(OIDQty, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(OIDsku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(OIDCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(OIDPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(OIDProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35)
                    .addComponent(OIDQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Log Search"));

        searchFilter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select All", "Category", "Username" }));
        searchFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFilterActionPerformed(evt);
            }
        });

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("Filter by :");

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("Search by  : ");

        PSButton1.setText("Search");
        PSButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PSButton1ActionPerformed(evt);
            }
        });

        btnLogRefresh.setText("Refresh");
        btnLogRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogRefreshActionPerformed(evt);
            }
        });

        searchBy.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select All", "Log ID", "SKU", "Name" }));
        searchBy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchByActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchFilter, 0, 224, Short.MAX_VALUE)
                    .addComponent(textFilter)
                    .addComponent(searchBy, javax.swing.GroupLayout.Alignment.TRAILING, 0, 224, Short.MAX_VALUE)
                    .addComponent(selectedFilter, javax.swing.GroupLayout.Alignment.TRAILING, 0, 224, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(PSButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLogRefresh, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(searchFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(selectedFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(PSButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(searchBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnLogRefresh, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel9.getAccessibleContext().setAccessibleName("Products Management ");

        tabFrame.addTab("Item Log", jPanel3);

        categoryLogTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Username", "Date", "Old Category", "New Category", "State"
            }
        ));
        jScrollPane3.setViewportView(categoryLogTable);

        clearSearchCategory.setText("Clear");
        clearSearchCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearSearchCategoryActionPerformed(evt);
            }
        });

        extCategoryLogSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                extCategoryLogSearchKeyReleased(evt);
            }
        });

        jLabel11.setText("Search by username :");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(extCategoryLogSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clearSearchCategory)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clearSearchCategory)
                    .addComponent(extCategoryLogSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 587, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tabFrame.addTab("Category Log", jPanel7);

        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder("Item Log Report"));

        productReportTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Log ID", "Date", "SKU", "Name", "Username", "State"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane4.setViewportView(productReportTable);

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder("Item Report Info"));

        jLabel36.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel36.setText("Total Log :");

        IRItotal.setText("0");
        IRItotal.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        IRItotal.setEnabled(false);

        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel37.setText("Total Add :");

        jLabel38.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel38.setText("Total Update :");

        jLabel39.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel39.setText("Total Delete :");

        IRIdelete.setText("0");
        IRIdelete.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        IRIdelete.setEnabled(false);

        IRIupdate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.##"))));
        IRIupdate.setText("0");
        IRIupdate.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        IRIupdate.setEnabled(false);

        IRIadd.setText("0");
        IRIadd.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        IRIadd.setEnabled(false);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(IRItotal, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(IRIupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(IRIadd, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(IRIdelete, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(IRItotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IRIadd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel37))
                .addGap(18, 18, 18)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IRIupdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel38))
                .addGap(18, 18, 18)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IRIdelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel39))
                .addContainerGap(159, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 709, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel20.setBorder(javax.swing.BorderFactory.createTitledBorder("Category Log Report"));

        categoryReportTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Username", "Date", "Old Category", "New Category", "State"
            }
        ));
        jScrollPane5.setViewportView(categoryReportTable);

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder("Category Report Info"));

        jLabel41.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel41.setText("Total Log :");

        CRItotal.setText("0");
        CRItotal.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        CRItotal.setEnabled(false);

        jLabel42.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel42.setText("Total Add :");

        jLabel43.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel43.setText("Total Update :");

        jLabel44.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel44.setText("Total Delete :");

        CRIdelete.setText("0");
        CRIdelete.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        CRIdelete.setEnabled(false);

        CRIupdate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.##"))));
        CRIupdate.setText("0");
        CRIupdate.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        CRIupdate.setEnabled(false);

        CRIadd.setText("0");
        CRIadd.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        CRIadd.setEnabled(false);

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(CRIdelete, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(CRItotal, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(CRIadd, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CRIupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel41)
                    .addComponent(CRItotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel42)
                    .addComponent(CRIadd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CRIupdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel43))
                .addGap(18, 18, 18)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CRIdelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel44))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 708, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(0, 127, Short.MAX_VALUE))
        );

        REmonth.setModel(new javax.swing.DefaultComboBoxModel<>(getArrayMonth()));

        REyear.setModel(new javax.swing.DefaultComboBoxModel<>(getArrayYear()));

        REsearch.setText("Search");
        REsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                REsearchActionPerformed(evt);
            }
        });

        jLabel12.setText("Month :");

        jLabel15.setText("Year :");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(REmonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jLabel15)
                .addGap(18, 18, 18)
                .addComponent(REyear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(REsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(REmonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(REyear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(REsearch)
                    .addComponent(jLabel12)
                    .addComponent(jLabel15))
                .addGap(1, 1, 1)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, 629, Short.MAX_VALUE)
        );

        tabFrame.addTab("Log Report", jPanel6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabFrame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabFrame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tabFrameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabFrameMouseClicked
        var Index = tabFrame.getSelectedIndex();
        switch (Index)
        {
            case 1 -> loadItemLog(LogManager.getItems());
            case 2 -> {
                DefaultTableModel dtm = (DefaultTableModel)categoryLogTable.getModel();
                dtm.getDataVector().removeAllElements();
                dtm.fireTableDataChanged();
                loadCategoryLog(LogManager.getCategories());
            }
        }
    }//GEN-LAST:event_tabFrameMouseClicked

    private void REsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_REsearchActionPerformed
        loadReport();
    }//GEN-LAST:event_REsearchActionPerformed

    private void extCategoryLogSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_extCategoryLogSearchKeyReleased
        var Keyword = extCategoryLogSearch.getText();
        loadCategoryLog(LogManager.getCategories().stream().filter(x -> x.getUsername().contains(Keyword)).toList());
    }//GEN-LAST:event_extCategoryLogSearchKeyReleased

    private void clearSearchCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearSearchCategoryActionPerformed
        loadCategoryLog(LogManager.getCategories());
    }//GEN-LAST:event_clearSearchCategoryActionPerformed

    private void searchByActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchByActionPerformed
        textFilter.setText("");
    }//GEN-LAST:event_searchByActionPerformed

    private void btnLogRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogRefreshActionPerformed
        loadItemLog(LogManager.getItems());
    }//GEN-LAST:event_btnLogRefreshActionPerformed

    private void PSButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PSButton1ActionPerformed
        var filterIndex = searchFilter.getSelectedIndex();
        var selectedItem = (String)selectedFilter.getSelectedItem();
        var itemsByFilter = LogManager.getItems();
        switch (filterIndex)
        {
            case 0 -> loadItemLog(itemsByFilter);
            case 1 ->
            {
                /*if (selectedItem == null)
                {
                    JOptionPane.showMessageDialog(null, "!", "Item Log Search" , JOptionPane.INFORMATION_MESSAGE);
                }*/
                itemsByFilter = LogManager.getItems().stream().filter(x -> x.getCategory().equals(selectedItem)).toList();
            }
            case 2 ->
            {
                /*if (selectedItem == null)
                {
                    JOptionPane.showMessageDialog(null, "!", "Item Log Search" , JOptionPane.INFORMATION_MESSAGE);
                }*/
                itemsByFilter = LogManager.getItems().stream().filter(x -> x.getUsername().equals(selectedItem)).toList();
            }
        }
        var itemsByFilter2 = itemsByFilter;
        var searchIndex = searchBy.getSelectedIndex();
        switch (searchIndex)
        {
            case 1 ->
            {
                itemsByFilter2 = itemsByFilter.stream().filter(x -> x.getLogID().contains(textFilter.getText())).toList();
            }
            case 2 ->
            {
                itemsByFilter2 = itemsByFilter.stream().filter(x -> x.getSKU().contains(textFilter.getText())).toList();
            }
            case 3 ->
            {
                itemsByFilter2 = itemsByFilter.stream().filter(x -> x.getName().contains(textFilter.getText())).toList();
            }
        }
        if (!itemsByFilter2.isEmpty())
        {
            loadItemLog(itemsByFilter2);
        }
        else
        {
            clearItemLogTable();
        }
    }//GEN-LAST:event_PSButton1ActionPerformed

    private void searchFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFilterActionPerformed
        var Index = searchFilter.getSelectedIndex();
        selectedFilter.removeAllItems();
        selectedFilter.enable(true);
        switch (Index)
        {
            case 0 -> selectedFilter.enable(false);
            case 1 ->
            {
                for (var Category : StockManager.GetCategories())
                {
                    selectedFilter.addItem(Category.GetName());
                }
            }
            case 2 ->
            {
                var usernameList = new ArrayList<String>();
                for (var Item : LogManager.getItems())
                {
                    if (!usernameList.contains(Item.getUsername()))
                    {
                        usernameList.add(Item.getUsername());
                    }
                }
                for (var Username : usernameList)
                {
                    selectedFilter.addItem(Username);
                }
            }
        }
    }//GEN-LAST:event_searchFilterActionPerformed

    private void productLogTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productLogTableMouseClicked
        String logID = productLogTable.getValueAt(productLogTable.getSelectedRow(), 0).toString();
        var oldItem = LogManager.getOldLogDetail(logID);
        var LogItem = LogManager.getLogDetail(logID);
        if (productLogTable.getValueAt(productLogTable.getSelectedRow(), 5).toString().equals("DELETE"))
        {
            UIDsku.setText(oldItem.getSKU());
            UIDProduct.setText(oldItem.getName());
            UIDcategory.setText(oldItem.getCategory());
            UIDQty.setText(Integer.toString(oldItem.getQty()));
            UIDPrice.setText(Double.toString(oldItem.getPrice()));
            OIDsku.setText(LogItem.getSKU());
            OIDProduct.setText(LogItem.getName());
            OIDCategory.setText(LogItem.getCategory());
            OIDQty.setText(Integer.toString(LogItem.getQty()));
            OIDPrice.setText(Double.toString(LogItem.getPrice()));
        }
        else
        {
            OIDsku.setText(oldItem.getSKU());
            OIDProduct.setText(oldItem.getName());
            OIDCategory.setText(oldItem.getCategory());
            OIDQty.setText(Integer.toString(oldItem.getQty()));
            OIDPrice.setText(Double.toString(oldItem.getPrice()));
            UIDsku.setText(LogItem.getSKU());
            UIDProduct.setText(LogItem.getName());
            UIDcategory.setText(LogItem.getCategory());
            UIDQty.setText(Integer.toString(LogItem.getQty()));
            UIDPrice.setText(Double.toString(LogItem.getPrice()));
        }

    }//GEN-LAST:event_productLogTableMouseClicked

    private void deleteCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteCategoryActionPerformed
        String categoryName = CMCategory.getSelectedItem().toString();
        int check = JOptionPane.showConfirmDialog(null, "Do you want to delete "+categoryName+" from category?\nif you delete this category all item in this category will deleted","Delete category"
            ,JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);

        if (check == JOptionPane.YES_OPTION){
            boolean status = StockManager.DeleteCategory(categoryName);
            if (status == false){
                JOptionPane.showMessageDialog(null, "Delete fail", "Delete category"
                    ,JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        loadCategory(StockManager.GetCategories());
        loadTable(StockManager.GetItems());
        var Category = new CategoryLog();
        Category.setUsername(Account.GetUsername());
        Category.setDate(LogManager.getCurDateTime());
        Category.setOldName(categoryName);
        Category.setNewName("-");
        Category.setState("DELETE");
        LogManager.SaveCategory(Category);
    }//GEN-LAST:event_deleteCategoryActionPerformed

    private void updateCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateCategoryActionPerformed
        String categoryName = CMCategory.getSelectedItem().toString();
        String newCategoryName = CMName.getText();
        if (newCategoryName.equals("")){
            JOptionPane.showMessageDialog(null, "Category cannot empty", "Update category"
                ,JOptionPane.ERROR_MESSAGE);

            return;
        }
        int check = JOptionPane.showConfirmDialog(null, "Do you want to change "+categoryName+" to "+newCategoryName+" ?", "Category Update"
            ,JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);

        if (check == JOptionPane.YES_OPTION){
            boolean status = StockManager.UpdateCategory(categoryName, newCategoryName);
            if (status == false){
                JOptionPane.showMessageDialog(null, "Please try to use other category name", "Update category"
                    ,JOptionPane.ERROR_MESSAGE);
                return;
            }
            loadCategory(StockManager.GetCategories());
            loadTable(StockManager.GetItems());
            var Category = new CategoryLog();
            Category.setUsername(Account.GetUsername());
            Category.setDate(LogManager.getCurDateTime());
            Category.setOldName(categoryName);
            Category.setNewName(newCategoryName);
            Category.setState("UPDATE");
            LogManager.SaveCategory(Category);
        }

    }//GEN-LAST:event_updateCategoryActionPerformed

    private void CMAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CMAddActionPerformed
        var Name = CMName.getText();
        if (Name.isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Category can not be empty!", "Category" , JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (StockManager.GetCategoryByName(Name) == null)
        {
            if (StockManager.AddCategory(Name))
            {
                var Category = new CategoryLog();
                Category.setUsername(Account.GetUsername());
                Category.setDate(LogManager.getCurDateTime());
                Category.setOldName("-");
                Category.setNewName(CMName.getText());
                Category.setState("ADD");
                LogManager.SaveCategory(Category);
                JOptionPane.showMessageDialog(null, "Add Category Complete!", "Category" ,JOptionPane.INFORMATION_MESSAGE);
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Category Cannot be same\nPlease Try Other Name!", "Category" ,JOptionPane.ERROR_MESSAGE);
        }

        loadCategory(StockManager.GetCategories());
    }//GEN-LAST:event_CMAddActionPerformed

    private void CMCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CMCategoryActionPerformed
        CMName.setText((String)CMCategory.getSelectedItem());
    }//GEN-LAST:event_CMCategoryActionPerformed

    private void btnClearInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearInputActionPerformed
        PMsku.setText("");
        PMName.setText("");
        PMPrice.setText("");
        PMQty.setText("");
        PMCategory.setSelectedIndex(0);
        itemsTable.clearSelection();
    }//GEN-LAST:event_btnClearInputActionPerformed

    private void deleteItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteItemActionPerformed
        if (itemsTable.getSelectedRow() == -1){
            JOptionPane.showMessageDialog(null, "Please Select item in table!", "Select Table"
                ,JOptionPane.ERROR_MESSAGE);
            return;
        }
        String OGsku = itemsTable.getValueAt(itemsTable.getSelectedRow(), 1).toString();

        PMsku.setText("");
        PMName.setText("");
        PMPrice.setText("");
        PMQty.setText("");
        PMCategory.setSelectedIndex(0);

        DefaultTableModel dtm = (DefaultTableModel)itemsTable.getModel();
        var Data = dtm.getDataVector().get(itemsTable.getSelectedRow()).toArray();
        var Item = new ItemLog();
        Item.setLogID(LogManager.getCurDateTime("DE"));
        Item.setDate(LogManager.getCurDateTime());
        Item.setUsername(Account.GetUsername());
        Item.setSKU(Data[1].toString());
        Item.setName(Data[2].toString());
        Item.setCategory(Data[3].toString());
        Item.setQty(Integer.parseInt(Data[4].toString()));
        Item.setPrice(Double.parseDouble(Data[5].toString()));
        Item.setState("DELETE");
        if (LogManager.SaveItem(Item))
        {
            LogManager.SaveOldItem(Item.getLogID(), "DELETE", "DELETE", "DELETE", 0, 0);
        }
        StockManager.DeleteItemBySKU(OGsku);
        loadTable(StockManager.GetItems());
        itemsTable.clearSelection();
    }//GEN-LAST:event_deleteItemActionPerformed

    private void updateProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateProductActionPerformed
        if (itemsTable.getSelectedRow() == -1){
            JOptionPane.showMessageDialog(null, "Please Select item in table!", "Select Table"
                ,JOptionPane.ERROR_MESSAGE);
            return;
        }
        String OGsku = itemsTable.getValueAt(itemsTable.getSelectedRow(), 1).toString();
        DefaultTableModel dtm = (DefaultTableModel)itemsTable.getModel();
        var Data = dtm.getDataVector().get(itemsTable.getSelectedRow()).toArray();
        String[] strArray = {PMsku.getText(), PMName.getText(), PMCategory.getSelectedItem().toString(), PMQty.getText(), PMPrice.getText()};
        for (var s : strArray)
        {
            if (s.isEmpty())
            {
                JOptionPane.showMessageDialog(null, "Please fill all data!", "Fill data"
                    , JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        var newItem = new ItemStock(strArray[0], strArray[1], strArray[2], Integer.parseInt(strArray[3]), Double.parseDouble(strArray[4]));
        StockManager.UpdateItem(newItem, OGsku);
        var Item = new ItemLog();
        Item.setLogID(LogManager.getCurDateTime("UD"));
        Item.setDate(LogManager.getCurDateTime());
        Item.setUsername(Account.GetUsername());
        Item.setSKU(newItem.getSKU());
        Item.setName(newItem.getName());
        Item.setCategory(newItem.getCategory());
        Item.setQty(newItem.getQty());
        Item.setPrice(newItem.getPrice());
        Item.setState("UPDATE");
        if (LogManager.SaveItem(Item))
        {
            LogManager.SaveOldItem(Item.getLogID(), Data[1].toString(), Data[2].toString(), Data[3].toString(), Integer.parseInt(Data[4].toString()), Double.parseDouble(Data[5].toString()));
        }
        loadTable(StockManager.GetItems());
        itemsTable.clearSelection();

    }//GEN-LAST:event_updateProductActionPerformed

    private void addProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProductActionPerformed
        if (PMCategory.getSelectedIndex() == -1 || PMCategory.getSelectedItem() == null)
        {
            JOptionPane.showMessageDialog(null, "Insert some category!", "Fill data", JOptionPane.WARNING_MESSAGE);
            return;
        }
        DefaultTableModel dtm = (DefaultTableModel)itemsTable.getModel();
        String[] data = {Integer.toString(dtm.getRowCount()+1), PMsku.getText(), PMName.getText(), PMCategory.getSelectedItem().toString(), PMQty.getText(), PMPrice.getText()};
        for(String s: data){
            if (s.isEmpty()){
                JOptionPane.showMessageDialog(null, "Please fill all data!", "Fill data"
                    ,JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        int quantity = Integer.parseInt(data[4]);
        double price = Double.parseDouble(data[5]);
        ItemStock item = new ItemStock(
            data[1], data[2], data[3], (int)quantity, (double)price);

        if (StockManager.GetItemBySKU(item.getSKU()) == null)
        {
            if(StockManager.AddItem(item))
            {
                dtm.addRow(data);
                var Item = new ItemLog();
                Item.setLogID(LogManager.getCurDateTime("AD"));
                Item.setDate(LogManager.getCurDateTime());
                Item.setUsername(Account.GetUsername());
                Item.setSKU(PMsku.getText());
                Item.setName(PMName.getText());
                Item.setCategory(PMCategory.getSelectedItem().toString());
                Item.setQty(Integer.parseInt(PMQty.getText()));
                Item.setPrice(Double.parseDouble(PMPrice.getText()));
                Item.setState("ADD NEW");
                if (LogManager.SaveItem(Item))
                {
                    LogManager.SaveOldItem(Item.getLogID(), "ADD NEW", "ADD NEW", "ADD NEW", 0, 0);
                }
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "SKU '" + item.getSKU() + "' already in use!", "Add Item" ,JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_addProductActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        loadTable(StockManager.GetItems());
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void PSButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PSButtonActionPerformed
        if (PSSearchBy.getSelectedIndex() == 2)
        {
            var Items = StockManager.GetItemsByCategory(PSCategory.getSelectedItem().toString());
            if (Items.isEmpty())
            {
                clearItemTable();
            }
            else
            {
                loadTable(Items);
            }
        }
        else
        {
            var Items = StockManager.GetItemsBySelectedItem(PSSearchBy.getSelectedIndex(), PSName.getText());
            if (Items.isEmpty())
            {
                clearItemTable();
            }
            else
            {
                loadTable(Items);
            }
        }
    }//GEN-LAST:event_PSButtonActionPerformed

    private void PSSearchByActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PSSearchByActionPerformed
        if (PSSearchBy.getSelectedIndex() == 2){
            PSCategory.enable(true);
            PSName.enable(false);
        }
        else{
            PSCategory.enable(false);
            PSName.enable(true);
        }
    }//GEN-LAST:event_PSSearchByActionPerformed

    private void itemsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemsTableMouseClicked
        String[] text = {
            itemsTable.getValueAt(itemsTable.getSelectedRow(), 1).toString(),
            itemsTable.getValueAt(itemsTable.getSelectedRow(), 2).toString(),
            itemsTable.getValueAt(itemsTable.getSelectedRow(), 3).toString(),
            itemsTable.getValueAt(itemsTable.getSelectedRow(), 4).toString(),
            itemsTable.getValueAt(itemsTable.getSelectedRow(), 5).toString(),
        };
        int categoryIndex = PMCategory.getItemCount();
        for (int i=0;i < categoryIndex ;i++){
            String categoryText = PMCategory.getItemAt(i);
            if (categoryText.equals(text[2])){
                PMCategory.setSelectedIndex(i);
            }
        }
        PMsku.setText(text[0]);
        PMName.setText(text[1]);
        PMQty.setText(text[3]);
        PMPrice.setText(text[4]);
    }//GEN-LAST:event_itemsTableMouseClicked

    public void loadTable(List<ItemStock> Items)
    {
        if(Items == null || Items.isEmpty())
        {
            clearItemTable();
            return;
        }
        var dtm = (DefaultTableModel)itemsTable.getModel();
        dtm.getDataVector().removeAllElements();
        for (var Item : Items)
        {
            String[] data = {
                Integer.toString(dtm.getRowCount()+1),
                Item.getSKU(), 
                Item.getName(), 
                Item.getCategory(), 
                Integer.toString(Item.getQty()), 
                Double.toString(Item.getPrice())};
            dtm.addRow(data); 
        }
    }
    
    public void clearItemTable()
    {
        DefaultTableModel dtm = (DefaultTableModel)itemsTable.getModel();
        dtm.getDataVector().removeAllElements();
        dtm.fireTableDataChanged();
    }
    
    public void clearItemLogTable()
    {
        DefaultTableModel dtm = (DefaultTableModel)productLogTable.getModel();
        dtm.getDataVector().removeAllElements();
        dtm.fireTableDataChanged();
    }
    
    public void loadCategory(List<Category> Categories)
    {
        CMCategory.removeAllItems();
        PMCategory.removeAllItems();
        PSCategory.removeAllItems();
        for (var Category : Categories)
        {
            CMCategory.addItem(Category.GetName());
            PMCategory.addItem(Category.GetName());
            PSCategory.addItem(Category.GetName());
        }
    }
    
    public void loadCategoryLog(List<CategoryLog> list)
    {
        DefaultTableModel dtm = (DefaultTableModel)categoryLogTable.getModel();
        dtm.getDataVector().removeAllElements();
        dtm.fireTableDataChanged();
        for (var item : list)
        {
            dtm.addRow(item.getArray());
        }
    }
    
    public void loadItemLog(List<ItemLog> list)
    {
        if (list.isEmpty())
        {
            clearItemTable();
            return;
        }
        DefaultTableModel dtm = (DefaultTableModel)productLogTable.getModel();
        dtm.getDataVector().removeAllElements();
        for (var item : list)
        {
            dtm.addRow(item.getTableArray()); 
        }
    }

    public void loadReport(){
        String date = REmonth.getSelectedItem().toString() + "-" + REyear.getSelectedItem().toString();
        DefaultTableModel j4 = (DefaultTableModel)productReportTable.getModel();
        j4.getDataVector().removeAllElements();
        j4.fireTableDataChanged();
        DefaultTableModel j5 = (DefaultTableModel)categoryReportTable.getModel();
        j5.getDataVector().removeAllElements();
        j5.fireTableDataChanged();
        
        var itemReport = ReportLogManager.GetItemReport(date);
        for (var e : itemReport.getItems())
        {
            j4.addRow(e.getTableArray());
        }
        IRItotal.setText(Integer.toString(itemReport.getTotal()[0]));
        IRIadd.setText(Integer.toString(itemReport.getTotal()[1]));
        IRIupdate.setText(Integer.toString(itemReport.getTotal()[2]));
        IRIdelete.setText(Integer.toString(itemReport.getTotal()[3]));
        
        var categoryReport = ReportLogManager.GetCategoryReport(date);
        for (var e : categoryReport.getItems())
        {
            j5.addRow(e.getArray());
        }
        CRItotal.setText(Integer.toString(categoryReport.getTotalArray()[0]));
        CRIadd.setText(Integer.toString(categoryReport.getTotalArray()[1]));
        CRIupdate.setText(Integer.toString(categoryReport.getTotalArray()[2]));
        CRIdelete.setText(Integer.toString(categoryReport.getTotalArray()[3]));
    }
    
    public void disableSearchCategory()
    {
        PSCategory.enable(false);
    }
    
    private String[] getArrayYear()
    {
        var list1 = new ArrayList<String>();
        var list2 = new ArrayList<String>();
        var listYear = new ArrayList<String>();
        for (var Item : LogManager.getItems())
        {
            var year = Item.getDate().split("-")[2].split(" ")[0];
            if (!list1.contains(year))
            {
                list1.add(year);
            }
        }
        for (var Category : LogManager.getCategories())
        {
            var year = Category.getDate().split("-")[2].split(" ")[0];
            if (!list2.contains(year))
            {
                list2.add(year);
            }
        }
        for (var l1 : list1)
        {
            if (!listYear.contains(l1))
            {
                listYear.add(l1);
            }
        }
        for (var l2 : list2)
        {
            if (!listYear.contains(l2))
            {
                listYear.add(l2);
            }
        }
        Collections.sort(listYear);
        Collections.reverse(listYear);
        return listYear.toArray(String[]::new);
    }
    
    private String[] getArrayMonth()
    {
        var list1 = new ArrayList<String>();
        var list2 = new ArrayList<String>();
        var listMonth = new ArrayList<String>();
        for (var Item : LogManager.getItems())
        {
            var month = Item.getDate().split("-")[1];
            if (!list1.contains(month))
            {
                list1.add(month);
            }
        }
        for (var Category : LogManager.getCategories())
        {
            var month = Category.getDate().split("-")[1];
            if (!list2.contains(month))
            {
                list2.add(month);
            }
        }
        for (var l1 : list1)
        {
            if (!listMonth.contains(l1))
            {
                listMonth.add(l1);
            }
        }
        for (var l2 : list2)
        {
            if (!listMonth.contains(l2))
            {
                listMonth.add(l2);
            }
        }
        Collections.sort(listMonth);
        Collections.reverse(listMonth);
        return listMonth.toArray(String[]::new);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CMAdd;
    private javax.swing.JComboBox<String> CMCategory;
    private javax.swing.JTextField CMName;
    private javax.swing.JTextField CRIadd;
    private javax.swing.JTextField CRIdelete;
    private javax.swing.JTextField CRItotal;
    private javax.swing.JFormattedTextField CRIupdate;
    private javax.swing.JTextField IRIadd;
    private javax.swing.JTextField IRIdelete;
    private javax.swing.JTextField IRItotal;
    private javax.swing.JFormattedTextField IRIupdate;
    private javax.swing.JTextField OIDCategory;
    private javax.swing.JFormattedTextField OIDPrice;
    private javax.swing.JTextField OIDProduct;
    private javax.swing.JFormattedTextField OIDQty;
    private javax.swing.JTextField OIDsku;
    private javax.swing.JComboBox<String> PMCategory;
    private javax.swing.JTextField PMName;
    private javax.swing.JFormattedTextField PMPrice;
    private javax.swing.JFormattedTextField PMQty;
    private javax.swing.JTextField PMsku;
    private javax.swing.JButton PSButton;
    private javax.swing.JButton PSButton1;
    private javax.swing.JComboBox<String> PSCategory;
    private javax.swing.JTextField PSName;
    private javax.swing.JComboBox<String> PSSearchBy;
    private javax.swing.JComboBox<String> REmonth;
    private javax.swing.JButton REsearch;
    private javax.swing.JComboBox<String> REyear;
    private javax.swing.JFormattedTextField UIDPrice;
    private javax.swing.JTextField UIDProduct;
    private javax.swing.JFormattedTextField UIDQty;
    private javax.swing.JTextField UIDcategory;
    private javax.swing.JTextField UIDsku;
    private javax.swing.JButton addProduct;
    private javax.swing.JButton btnClearInput;
    private javax.swing.JButton btnLogRefresh;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JTable categoryLogTable;
    private javax.swing.JTable categoryReportTable;
    private javax.swing.JButton clearSearchCategory;
    private javax.swing.JButton deleteCategory;
    private javax.swing.JButton deleteItem;
    private javax.swing.JTextField extCategoryLogSearch;
    private javax.swing.JTable itemsTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable productLogTable;
    private javax.swing.JTable productReportTable;
    private javax.swing.JComboBox<String> searchBy;
    private javax.swing.JComboBox<String> searchFilter;
    private javax.swing.JComboBox<String> selectedFilter;
    private javax.swing.JTabbedPane tabFrame;
    private javax.swing.JTextField textFilter;
    private javax.swing.JButton updateCategory;
    private javax.swing.JButton updateProduct;
    // End of variables declaration//GEN-END:variables
}
